/**
 * @Description:demo1主要学习冒泡排序
 * @author: 彭立
 * @date: 2018年8月27日 下午9:34:16
 * 
 */
package com.pl.demo1;

/**
*
*冒泡排序算法讲解：
*
* 假设有如下的几个数字，它们是乱序排列的，如下所示，现在需要把它们按照从大到小的顺序排列
*  23
*  1
*  32
*  7
*  13
*  
*  
*----------------------------------------------------------------------------------------------------------------------------------------------
*
*  第一次比较                           第二次比较                      第三次比较                    第四次比较                      该轮产生第一小的数
*  23 \                    23                     23                   23                       23
*  	   \no change
*  	   /
*  1  /                    1  \                   32                   32                       32
*                              \change           
*                              /                  
*  32                      32 /                   1  \                 7                        7
*                                                     \change
*                                                     /
*  7                       7                      7  /                 1  \                     13
*                                                                          \change
*                                                                          /
*  13                      13                     13                   13 /                     1
*
*----------------------------------------------------------------------------------------------------------------------------------------------
*
*  第一次比较                           第二次比较                      第三次比较                 该轮产生第二小的数
*  23 \                    32                     32                   32
*  	   \change
*  	   /
*  32 /                    23 \                   23                   23
*                              \no change           
*                              /                  
*  7                       7  /                   7  \                 13
*                                                     \change
*                                                     /
*  13                      13                     13 /                 7
*                                                                          
*                                                                          
*  1                       1                      1                    1
*----------------------------------------------------------------------------------------------------------------------------------------------
*
*  第一次比较                           第二次比较                    该轮产生第三小的数
*  32 \                    32                     32                   
*  	   \no change
*  	   /
*  23 /                    23 \                   23                   
*                              \no change           
*                              /                  
*  13                      13 /                   13                
*                                                     
*                                                     
*  7                       7                      7                
*                                                                          
*                                                                          
*  1                       1                      1                   
*----------------------------------------------------------------------------------------------------------------------------------------------
*
*  第一次比较                        该轮产生第四小的数
*  32 \                    32                                       
*  	   \no change
*  	   /
*  23 /                    23                                     
*                                        
*                                              
*  13                      13                                 
*                                                     
*                                                     
*  7                       7                                      
*                                                                          
*                                                                          
*  1                       1                       
*
*
*
*
*由上面的推演可以得出以下规律：
*如果有n个乱序排列的数，则需要进行n-1轮对比
*第1轮对比则需要进行n-1次两两对比，第2轮对比则需要进行n-2次两两对比，以此类推
*
*
*
*
*/